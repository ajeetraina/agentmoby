version: '3.8'

services:
  # Agent UI - Public facing interface
  agent-ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - public
    environment:
      - AGENT_API_URL=http://mcp-gateway:8080
      - NODE_ENV=production
    depends_on:
      - mcp-gateway
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Gateway - DMZ layer with interceptors
  mcp-gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - public
      - dmz
    environment:
      - GATEWAY_PORT=8080
      - AGENT_URL=http://agent-core:8001
      - INTERCEPTOR_CONFIG_PATH=/app/config/interceptors.yaml
      - LOG_LEVEL=info
    volumes:
      - ./config/interceptors.yaml:/app/config/interceptors.yaml:ro
      - ./interceptors:/app/interceptors:ro
      - gateway-logs:/var/log/gateway
    depends_on:
      - agent-core
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agent Core - Secure internal agent using Mastra
  agent-core:
    build:
      context: ./agent
      dockerfile: Dockerfile
    networks:
      - dmz
      - internal
    environment:
      - LLM_URL=http://model-runner:8000
      - MCP_SERVERS=filesystem,brave-search,github
      - SYSTEM_PROMPT_PATH=/app/config/system-prompt.txt
      - LOG_LEVEL=info
      - PYTHONUNBUFFERED=1
    volumes:
      - ./config/system-prompt.txt:/app/config/system-prompt.txt:ro
      - agent-workspace:/app/workspace
      - agent-logs:/var/log/agent
    depends_on:
      - model-runner
    restart: unless-stopped
    user: "1001:1001"  # Rootless execution
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Docker Model Runner - Local LLM (isolated)
  model-runner:
    image: docker.io/docker/model-runner:latest
    networks:
      - internal
    environment:
      - MODEL_NAME=microsoft/Phi-3.5-mini-instruct
      - HF_TOKEN_PATH=/run/secrets/hf_token
      - MAX_TOKENS=2048
      - TEMPERATURE=0.7
      - GPU_ENABLE=true
    volumes:
      - model-cache:/models
    secrets:
      - hf_token
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 60s
      timeout: 30s
      retries: 3

  # Wazuh Security Monitoring
  wazuh-manager:
    image: wazuh/wazuh-manager:4.7.0
    networks:
      - monitoring
    environment:
      - WAZUH_MANAGER_ROOT_CA_PASSWORD=wazuh
      - WAZUH_MANAGER_ADMIN_PASSWORD=wazuh
    volumes:
      - wazuh-api-configuration:/var/ossec/api/configuration
      - wazuh-etc:/var/ossec/etc
      - wazuh-logs:/var/ossec/logs
      - wazuh-queue:/var/ossec/queue
      - wazuh-var-multigroups:/var/ossec/var/multigroups
      - wazuh-integrations:/var/ossec/integrations-stored
      - wazuh-active-response:/var/ossec/active-response/bin
      - wazuh-agentless:/var/ossec/agentless
      - wazuh-wodles:/var/ossec/wodles
      - filebeat-etc:/etc/filebeat
      - filebeat-var:/var/lib/filebeat
      - ./config/wazuh:/wazuh-config-mount:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G

  # Wazuh Dashboard
  wazuh-dashboard:
    image: wazuh/wazuh-dashboard:4.7.0
    ports:
      - "443:5601"
    networks:
      - monitoring
      - public
    environment:
      - OPENSEARCH_HOSTS=https://wazuh-indexer:9200
      - WAZUH_API_URL=https://wazuh-manager
    depends_on:
      - wazuh-manager
      - wazuh-indexer
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  # Wazuh Indexer (OpenSearch)
  wazuh-indexer:
    image: wazuh/wazuh-indexer:4.7.0
    networks:
      - monitoring
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
    volumes:
      - wazuh-indexer-data:/var/lib/wazuh-indexer
      - ./config/wazuh/wazuh_indexer_ssl_certs/:/usr/share/wazuh-indexer/certs/:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    networks:
      - internal
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-mobyagent}
    volumes:
      - redis-data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-mobyagent}", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  # Public network - UI and monitoring dashboards only
  public:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    
  # DMZ network - Gateway and agent communication
  dmz:
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.21.0.0/16
    
  # Internal network - Agent and LLM (no internet access)
  internal:
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.22.0.0/16
    
  # Monitoring network - Wazuh components
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16

volumes:
  # Persistent storage
  model-cache:
  agent-workspace:
  redis-data:
  
  # Logs
  gateway-logs:
  agent-logs:
  
  # Wazuh volumes
  wazuh-api-configuration:
  wazuh-etc:
  wazuh-logs:
  wazuh-queue:
  wazuh-var-multigroups:
  wazuh-integrations:
  wazuh-active-response:
  wazuh-agentless:
  wazuh-wodles:
  wazuh-indexer-data:
  filebeat-etc:
  filebeat-var:

secrets:
  hf_token:
    file: ./secrets/hf_token.txt
  openai_api_key:
    file: ./secrets/openai_api_key.txt
  github_token:
    file: ./secrets/github_token.txt
